const WebSocket = require('ws');
const { bot } = require('./botInstance');

function watchMint(wallet, label, targetChat) {
  const ws = new WebSocket(`wss://api.mainnet.helius.xyz/v0/transactions-subscribe?api-key=${process.env.HELIUS_API_KEY}`);
  console.log(`‚úÖ [${label}] –ù–∞—á–∞–ª–∏ —Å–ª–µ–∂–µ–Ω–∏–µ –∑–∞ ${wallet}`);

  const timer = setTimeout(() => {
    ws.close();
    bot.sendMessage(targetChat, `‚åõ [${label}] Mint –Ω–µ –Ω–∞–π–¥–µ–Ω –∑–∞ 20 —á–∞—Å–æ–≤. –°–ª–µ–∂–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.`, { parse_mode: 'HTML' });
  }, 20 * 60 * 60 * 1000); // 20 —á–∞—Å–æ–≤

  ws.on('open', () => {
    ws.send(JSON.stringify({
      type: 'subscribe',
      accounts: [wallet],
      commitment: 'confirmed'
    }));
  });

  ws.on('message', (data) => {
    const msg = JSON.parse(data);
    if (msg.description?.includes('InitializeMint')) {
      ws.close();
      clearTimeout(timer);
      const txId = msg.signature;
      const contract = msg.description.match(/mint: ([A-Za-z0-9]+)/)?.[1] || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ';
      bot.sendMessage(targetChat,
        `‚úÖ [${label}] –ü—Ä–æ–∏–∑–≤–µ–¥—ë–Ω mint —Ç–æ–∫–µ–Ω–∞!\nüßæ –ö–æ–Ω—Ç—Ä–∞–∫—Ç: <code>${contract}</code>\nüîó https://solscan.io/tx/${txId}`,
        { parse_mode: 'HTML' });
    }
  });

  ws.on('close', () => {
    console.log(`üîå Mint-—Å–ª–µ–∂–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ –¥–ª—è ${wallet}`);
  });

  ws.on('error', (e) => {
    console.error(`üí• Mint WebSocket –æ—à–∏–±–∫–∞: ${e.message}`);
  });
}

module.exports = { watchMint };
